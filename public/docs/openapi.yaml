openapi: 3.0.3
info:
  title: 'Ajo By Cowris'
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8004'
paths:
  /api/register:
    post:
      summary: ''
      operationId: postApiRegister
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: ''
                  example: eligendi
                  nullable: false
                last_name:
                  type: string
                  description: ''
                  example: velit
                  nullable: false
                phone_number:
                  type: string
                  description: ''
                  example: error
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: fernando47@example.com
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: '`;_Vj!`j#XwpM'
                  nullable: false
              required:
                - first_name
                - last_name
                - phone_number
                - email
                - password
      security: []
  /api/login:
    post:
      summary: ''
      operationId: postApiLogin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: ross01@example.com
                  nullable: false
                password:
                  type: string
                  description: ''
                  example: esse
                  nullable: false
              required:
                - email
                - password
      security: []
    get:
      summary: ''
      operationId: getApiLogin
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/login could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/login could not be found.'
      tags:
        - Endpoints
      security: []
  /api/unauth_bootstrap:
    get:
      summary: ''
      operationId: getApiUnauth_bootstrap
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/unauth_bootstrap could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/unauth_bootstrap could not be found.'
      tags:
        - Endpoints
      security: []
  /api/logout:
    post:
      summary: ''
      operationId: postApiLogout
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/bootstrap:
    get:
      summary: ''
      operationId: getApiBootstrap
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/bootstrap could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/bootstrap could not be found.'
      tags:
        - Endpoints
      security: []
  /api/users:
    get:
      summary: ''
      operationId: getApiUsers
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/users could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/users could not be found.'
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiUsers
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: ''
                  example: mollitia
                  nullable: false
                last_name:
                  type: string
                  description: ''
                  example: accusantium
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: schinner.buddy@example.com
                  nullable: false
                phone_number:
                  type: string
                  description: ''
                  example: tenetur
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: 'gkKrOtS"8vC`LhT!'
                  nullable: false
              required:
                - first_name
                - last_name
                - email
                - phone_number
                - password
      security: []
  '/api/users/{id}':
    get:
      summary: ''
      operationId: getApiUsersId
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/users/illum could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/users/illum could not be found.'
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiUsersId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: ''
                  example: est
                  nullable: false
                last_name:
                  type: string
                  description: ''
                  example: quo
                  nullable: false
                email:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                phone_number:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: '"$vN!d?;"gvJX>znZHG'
                  nullable: false
              required:
                - first_name
                - last_name
                - password
      security: []
    delete:
      summary: ''
      operationId: deleteApiUsersId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: illum
        required: true
        schema:
          type: string
  /api/upload_documents:
    post:
      summary: ''
      operationId: postApiUpload_documents
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: 'Must be a file. Must not be greater than 20480 kilobytes.'
                  nullable: false
                id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: eos
                  nullable: false
                type:
                  type: string
                  description: ''
                  example: utility_bills
                  nullable: false
                  enum:
                    - nin_slip
                    - international_passport
                    - utility_bills
                    - drivers_license
                    - permanent_residence_card
                    - proof_of_address
                    - profile_picture
              required:
                - file
                - id
                - type
      security: []
  '/api/users/{id}/notifications':
    put:
      summary: ''
      operationId: putApiUsersIdNotifications
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                notify_security_alerts:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
                notify_ajo_alerts:
                  type: boolean
                  description: ''
                  example: false
                  nullable: false
                notify_product_announcements:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
                notify_support_tickets:
                  type: boolean
                  description: ''
                  example: true
                  nullable: false
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: quidem
        required: true
        schema:
          type: string
  '/api/users/{id}/account-details':
    put:
      summary: ''
      operationId: putApiUsersIdAccountDetails
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                account_number:
                  type: string
                  description: ''
                  example: error
                  nullable: true
                bank_name:
                  type: string
                  description: ''
                  example: aperiam
                  nullable: true
                account_name:
                  type: string
                  description: ''
                  example: velit
                  nullable: true
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: sed
        required: true
        schema:
          type: string
  /api/customers:
    get:
      summary: ''
      operationId: getApiCustomers
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/customers could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/customers could not be found.'
      tags:
        - Endpoints
      security: []
  '/api/customers/{id}':
    get:
      summary: ''
      operationId: getApiCustomersId
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/customers/cupiditate could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/customers/cupiditate could not be found.'
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiCustomersId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                phone_number:
                  type: string
                  description: ''
                  example: null
                  nullable: false
      security: []
    delete:
      summary: ''
      operationId: deleteApiCustomersId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the customer.'
        example: cupiditate
        required: true
        schema:
          type: string
  /api/transactions:
    get:
      summary: ''
      operationId: getApiTransactions
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/transactions could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/transactions could not be found.'
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiTransactions
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customer_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the customers table.'
                  example: eum
                  nullable: false
                amount:
                  type: number
                  description: ''
                  example: 36448784.47045
                  nullable: false
                currency_id:
                  type: string
                  description: 'The <code>id</code> of an existing record in the currencies table.'
                  example: sed
                  nullable: false
                type:
                  type: string
                  description: ''
                  example: deposit
                  nullable: false
                  enum:
                    - deposit
                    - fulfill
                rate:
                  type: number
                  description: ''
                  example: 317339.3042017
                  nullable: false
                fees:
                  type: number
                  description: ''
                  example: 256832046.22302
                  nullable: false
                processed_by:
                  type: string
                  description: 'The <code>id</code> of an existing record in the users table.'
                  example: null
                  nullable: true
                reference:
                  type: string
                  description: ''
                  example: facilis
                  nullable: false
              required:
                - customer_id
                - amount
                - currency_id
                - type
                - rate
                - fees
                - reference
      security: []
  '/api/transactions/{id}':
    get:
      summary: ''
      operationId: getApiTransactionsId
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/transactions/et could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/transactions/et could not be found.'
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiTransactionsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: ''
                  example: initiated
                  nullable: false
                  enum:
                    - initiated
                    - processing
                    - completed
                    - failed
              required:
                - status
      security: []
    delete:
      summary: ''
      operationId: deleteApiTransactionsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the transaction.'
        example: et
        required: true
        schema:
          type: string
  /api/exchange-rates:
    get:
      summary: ''
      operationId: getApiExchangeRates
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/exchange-rates could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/exchange-rates could not be found.'
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiExchangeRates
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                currency_id_from:
                  type: string
                  description: 'The <code>id</code> of an existing record in the currencies table.'
                  example: impedit
                  nullable: false
                currency_id_to:
                  type: string
                  description: 'The <code>id</code> of an existing record in the currencies table.'
                  example: earum
                  nullable: false
                rate:
                  type: number
                  description: ''
                  example: 46894807.07588
                  nullable: false
              required:
                - currency_id_from
                - currency_id_to
                - rate
      security: []
  '/api/exchange-rates/{id}':
    put:
      summary: ''
      operationId: putApiExchangeRatesId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                rate:
                  type: number
                  description: ''
                  example: 53.3176855
                  nullable: false
              required:
                - rate
      security: []
    delete:
      summary: ''
      operationId: deleteApiExchangeRatesId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the exchange rate.'
        example: 11
        required: true
        schema:
          type: integer
  '/api/verify_email/{token}/{email}':
    get:
      summary: ''
      operationId: getApiVerify_emailTokenEmail
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/verify_email/voluptates/jaquan.donnelly@example.net could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/verify_email/voluptates/jaquan.donnelly@example.net could not be found.'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: token
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: voluptates
      -
        in: path
        name: email
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: jaquan.donnelly@example.net
  '/api/confirm-change-email/{token}':
    get:
      summary: ''
      operationId: getApiConfirmChangeEmailToken
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/confirm-change-email/aut could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/confirm-change-email/aut could not be found.'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: token
        description: ''
        example: aut
        required: true
        schema:
          type: string
  /api/resend_email_verification:
    post:
      summary: ''
      operationId: postApiResend_email_verification
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: ilind@example.net
                  nullable: false
              required:
                - email
      security: []
  /api/reset_password:
    post:
      summary: ''
      operationId: postApiReset_password
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: ''
                  example: et
                  nullable: false
                user_type:
                  type: string
                  description: ''
                  example: null
                  nullable: true
              required:
                - username
      security: []
  /api/confirm_reset_password:
    post:
      summary: ''
      operationId: postApiConfirm_reset_password
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                otp:
                  type: string
                  description: ''
                  example: cupiditate
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: ricky33@example.net
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: ">L;YM'#x6o)K${."
                  nullable: false
              required:
                - otp
                - email
                - password
      security: []
  /api/guide:
    post:
      summary: ''
      operationId: postApiGuide
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: voluptatem
                  nullable: false
                type_id:
                  type: string
                  description: ''
                  example: sequi
                  nullable: false
              required:
                - type
                - type_id
      security: []
tags:
  -
    name: Endpoints
    description: ''
