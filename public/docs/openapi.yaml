openapi: 3.0.3
info:
  title: KIZA
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost:8004'
paths:
  /api/register:
    post:
      summary: ''
      operationId: postApiRegister
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: 'Must be at least 3 characters.'
                  example: ksnikbesdijpguxi
                  nullable: false
                last_name:
                  type: string
                  description: 'Must be at least 3 characters.'
                  example: pxkabevwdfbwfzbqwcqgjvmxkicwezuyymnqkbybhbmqoubmrrxkeuqsxkbrnpcrgydntcutidlffqg
                  nullable: false
                phone_number:
                  type: string
                  description: ''
                  example: qui
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: arturo35@example.net
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: 'NpKh[AV'
                  nullable: false
              required:
                - first_name
                - last_name
                - phone_number
                - email
                - password
      security: []
  /api/login:
    post:
      summary: ''
      operationId: postApiLogin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: janick16@example.net
                  nullable: false
                password:
                  type: string
                  description: ''
                  example: dolore
                  nullable: false
              required:
                - email
                - password
      security: []
    get:
      summary: ''
      operationId: getApiLogin
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Login is not allowed for public routes'
                properties:
                  message:
                    type: string
                    example: 'Login is not allowed for public routes'
      tags:
        - Endpoints
      security: []
  /api/admin/login:
    get:
      summary: ''
      operationId: getApiAdminLogin
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Login is not allowed for public routes'
                properties:
                  message:
                    type: string
                    example: 'Login is not allowed for public routes'
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiAdminLogin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: steuber.lempi@example.org
                  nullable: false
                password:
                  type: string
                  description: ''
                  example: molestiae
                  nullable: false
              required:
                - email
                - password
      security: []
  /api/unauth_bootstrap:
    get:
      summary: ''
      operationId: getApiUnauth_bootstrap
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example: []
      tags:
        - Endpoints
      security: []
  /api/logout:
    post:
      summary: ''
      operationId: postApiLogout
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/bootstrap:
    get:
      summary: ''
      operationId: getApiBootstrap
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/customers:
    get:
      summary: ''
      operationId: getApiCustomers
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  '/api/customers/{id}':
    get:
      summary: ''
      operationId: getApiCustomersId
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiCustomersId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                phone_number:
                  type: string
                  description: ''
                  example: null
                  nullable: false
      security: []
    delete:
      summary: ''
      operationId: deleteApiCustomersId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the customer.'
        example: voluptatibus
        required: true
        schema:
          type: string
  /api/transactions:
    get:
      summary: ''
      operationId: getApiTransactions
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiTransactions
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  description: 'Must be at least 0.01.'
                  example: 29
                  nullable: false
                currency_id_from:
                  type: string
                  description: 'The <code>id</code> of an existing record in the currencies table.'
                  example: qui
                  nullable: false
                currency_id_to:
                  type: string
                  description: 'The <code>id</code> of an existing record in the currencies table.'
                  example: earum
                  nullable: false
                method:
                  type: string
                  description: ''
                  example: cash_pick_up
                  nullable: false
                  enum:
                    - mobile_money
                    - bank_deposit
                    - cash_pick_up
                save_recipient:
                  type: boolean
                  description: ''
                  example: false
                  nullable: true
                recipient:
                  type: object
                  description: ''
                  example: []
                  nullable: false
                  properties:
                    first_name:
                      type: string
                      description: 'This field is required when <code>method</code> is <code>mobile_money</code> or <code>cash_pick_up</code>. Must not be greater than 255 characters.'
                      example: rja
                      nullable: false
                    last_name:
                      type: string
                      description: 'This field is required when <code>method</code> is <code>mobile_money</code> or <code>cash_pick_up</code>. Must not be greater than 255 characters.'
                      example: brewvwntbxfopezcqmimmgh
                      nullable: false
                    phone_number:
                      type: string
                      description: 'This field is required when <code>method</code> is <code>mobile_money</code>. Must not be greater than 15 characters.'
                      example: ase
                      nullable: true
                    email:
                      type: string
                      description: 'This field is required when <code>method</code> is <code>cash_pick_up</code>.  Must be a valid email address. Must not be greater than 255 characters.'
                      example: wilson.borer@example.org
                      nullable: true
                    bank_name:
                      type: string
                      description: 'This field is required when <code>method</code> is <code>bank_deposit</code>. Must not be greater than 255 characters.'
                      example: vihljxtmiwtldqoj
                      nullable: true
                    account_name:
                      type: string
                      description: 'This field is required when <code>method</code> is <code>bank_deposit</code>. Must not be greater than 255 characters.'
                      example: kszhziqgrligcb
                      nullable: true
                    account_number:
                      type: string
                      description: 'This field is required when <code>method</code> is <code>bank_deposit</code>. Must not be greater than 50 characters.'
                      example: ecsqjar
                      nullable: true
              required:
                - amount
                - currency_id_from
                - currency_id_to
                - method
                - recipient
      security: []
  '/api/transactions/{id}':
    get:
      summary: ''
      operationId: getApiTransactionsId
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiTransactionsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: ''
                  example: processing
                  nullable: false
                  enum:
                    - initiated
                    - processing
                    - completed
                    - failed
              required:
                - status
      security: []
    delete:
      summary: ''
      operationId: deleteApiTransactionsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the transaction.'
        example: magni
        required: true
        schema:
          type: string
  /api/saved-recipients:
    get:
      summary: 'Display a listing of the saved recipients.'
      operationId: displayAListingOfTheSavedRecipients
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  '/api/saved-recipients/{id}':
    get:
      summary: 'Display the specified saved recipient.'
      operationId: displayTheSpecifiedSavedRecipient
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    delete:
      summary: 'Remove the specified saved recipient from storage.'
      operationId: removeTheSpecifiedSavedRecipientFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the saved recipient.'
        example: nam
        required: true
        schema:
          type: string
  /api/admin/logout:
    post:
      summary: ''
      operationId: postApiAdminLogout
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/admin/bootstrap:
    get:
      summary: ''
      operationId: getApiAdminBootstrap
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/admin/unauth_bootstrap:
    get:
      summary: ''
      operationId: getApiAdminUnauth_bootstrap
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/admin/users:
    get:
      summary: 'Display a listing of users.'
      operationId: displayAListingOfUsers
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created user in storage.'
      operationId: storeANewlyCreatedUserInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: vhgacujceqxpxqzlfmt
                  nullable: false
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: yherman@example.org
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: "T]'%<G>*"
                  nullable: false
              required:
                - name
                - email
                - password
      security: []
  '/api/admin/users/{id}':
    get:
      summary: 'Display the specified user.'
      operationId: displayTheSpecifiedUser
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    put:
      summary: 'Update the specified user.'
      operationId: updateTheSpecifiedUser
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: ibsnsqrbetteiq
                  nullable: false
                email:
                  type: string
                  description: ''
                  example: null
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: "gXZ)ZE+XKB`,A'"
                  nullable: false
      security: []
    delete:
      summary: 'Remove the specified user from storage.'
      operationId: removeTheSpecifiedUserFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: 14
        required: true
        schema:
          type: integer
  /api/admin/exchange-rates:
    get:
      summary: ''
      operationId: getApiAdminExchangeRates
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiAdminExchangeRates
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                currency_id_from:
                  type: string
                  description: 'The <code>id</code> of an existing record in the currencies table.'
                  example: accusamus
                  nullable: false
                currency_id_to:
                  type: string
                  description: 'The <code>id</code> of an existing record in the currencies table.'
                  example: consequatur
                  nullable: false
                rate:
                  type: number
                  description: ''
                  example: 79416.627
                  nullable: false
              required:
                - currency_id_from
                - currency_id_to
                - rate
      security: []
  '/api/admin/exchange-rates/{id}':
    put:
      summary: ''
      operationId: putApiAdminExchangeRatesId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                rate:
                  type: number
                  description: ''
                  example: 33262.0
                  nullable: false
              required:
                - rate
      security: []
    delete:
      summary: ''
      operationId: deleteApiAdminExchangeRatesId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the exchange rate.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/exchange_rates/{currencyCode}':
    get:
      summary: ''
      operationId: getApiExchange_ratesCurrencyCode
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Currency not found'
                properties:
                  message:
                    type: string
                    example: 'Currency not found'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: currencyCode
        description: ''
        example: 1
        required: true
        schema:
          type: integer
  /api/exchange-rates/all:
    get:
      summary: ''
      operationId: getApiExchangeRatesAll
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  -
                    id: 1
                    currency_id_from: 1
                    currency_id_to: 2
                    rate: '1300.500000'
                    is_active: true
                    created_at: '2025-03-10T09:53:45.000000Z'
                    updated_at: '2025-03-10T09:53:45.000000Z'
                    currency_from:
                      id: 1
                      code: USD
                      name: 'US Dollar'
                      symbol: $
                      flag: 'https://flagcdn.com/us.svg'
                      created_at: '2025-03-10T09:53:45.000000Z'
                      updated_at: '2025-03-10T09:53:45.000000Z'
                    currency_to:
                      id: 2
                      code: NGN
                      name: 'Nigerian Naira'
                      symbol: ₦
                      flag: 'https://flagcdn.com/ng.svg'
                      created_at: '2025-03-10T09:53:45.000000Z'
                      updated_at: '2025-03-10T09:53:45.000000Z'
                  -
                    id: 2
                    currency_id_from: 2
                    currency_id_to: 1
                    rate: '0.000770'
                    is_active: true
                    created_at: '2025-03-10T09:53:45.000000Z'
                    updated_at: '2025-03-10T09:53:45.000000Z'
                    currency_from:
                      id: 2
                      code: NGN
                      name: 'Nigerian Naira'
                      symbol: ₦
                      flag: 'https://flagcdn.com/ng.svg'
                      created_at: '2025-03-10T09:53:45.000000Z'
                      updated_at: '2025-03-10T09:53:45.000000Z'
                    currency_to:
                      id: 1
                      code: USD
                      name: 'US Dollar'
                      symbol: $
                      flag: 'https://flagcdn.com/us.svg'
                      created_at: '2025-03-10T09:53:45.000000Z'
                      updated_at: '2025-03-10T09:53:45.000000Z'
                  -
                    id: 3
                    currency_id_from: 3
                    currency_id_to: 2
                    rate: '1400.750000'
                    is_active: true
                    created_at: '2025-03-10T09:53:45.000000Z'
                    updated_at: '2025-03-10T09:53:45.000000Z'
                    currency_from:
                      id: 3
                      code: EUR
                      name: Euro
                      symbol: €
                      flag: 'https://flagcdn.com/eu.svg'
                      created_at: '2025-03-10T09:53:45.000000Z'
                      updated_at: '2025-03-10T09:53:45.000000Z'
                    currency_to:
                      id: 2
                      code: NGN
                      name: 'Nigerian Naira'
                      symbol: ₦
                      flag: 'https://flagcdn.com/ng.svg'
                      created_at: '2025-03-10T09:53:45.000000Z'
                      updated_at: '2025-03-10T09:53:45.000000Z'
                  -
                    id: 4
                    currency_id_from: 2
                    currency_id_to: 3
                    rate: '0.000710'
                    is_active: true
                    created_at: '2025-03-10T09:53:45.000000Z'
                    updated_at: '2025-03-10T09:53:45.000000Z'
                    currency_from:
                      id: 2
                      code: NGN
                      name: 'Nigerian Naira'
                      symbol: ₦
                      flag: 'https://flagcdn.com/ng.svg'
                      created_at: '2025-03-10T09:53:45.000000Z'
                      updated_at: '2025-03-10T09:53:45.000000Z'
                    currency_to:
                      id: 3
                      code: EUR
                      name: Euro
                      symbol: €
                      flag: 'https://flagcdn.com/eu.svg'
                      created_at: '2025-03-10T09:53:45.000000Z'
                      updated_at: '2025-03-10T09:53:45.000000Z'
                  -
                    id: 5
                    currency_id_from: 4
                    currency_id_to: 2
                    rate: '950.300000'
                    is_active: true
                    created_at: '2025-03-10T09:53:45.000000Z'
                    updated_at: '2025-03-10T09:53:45.000000Z'
                    currency_from:
                      id: 4
                      code: CAD
                      name: 'Canadian Dollar'
                      symbol: C$
                      flag: 'https://flagcdn.com/ca.svg'
                      created_at: '2025-03-10T09:53:45.000000Z'
                      updated_at: '2025-03-10T09:53:45.000000Z'
                    currency_to:
                      id: 2
                      code: NGN
                      name: 'Nigerian Naira'
                      symbol: ₦
                      flag: 'https://flagcdn.com/ng.svg'
                      created_at: '2025-03-10T09:53:45.000000Z'
                      updated_at: '2025-03-10T09:53:45.000000Z'
                  -
                    id: 6
                    currency_id_from: 2
                    currency_id_to: 4
                    rate: '0.001050'
                    is_active: true
                    created_at: '2025-03-10T09:53:45.000000Z'
                    updated_at: '2025-03-10T09:53:45.000000Z'
                    currency_from:
                      id: 2
                      code: NGN
                      name: 'Nigerian Naira'
                      symbol: ₦
                      flag: 'https://flagcdn.com/ng.svg'
                      created_at: '2025-03-10T09:53:45.000000Z'
                      updated_at: '2025-03-10T09:53:45.000000Z'
                    currency_to:
                      id: 4
                      code: CAD
                      name: 'Canadian Dollar'
                      symbol: C$
                      flag: 'https://flagcdn.com/ca.svg'
                      created_at: '2025-03-10T09:53:45.000000Z'
                      updated_at: '2025-03-10T09:53:45.000000Z'
      tags:
        - Endpoints
      security: []
  /api/resend_phone_number_verification:
    post:
      summary: ''
      operationId: postApiResend_phone_number_verification
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone_number:
                  type: string
                  description: 'Must be at least 10 characters.'
                  example: baeqfwocojwkflfgaxlvnnusdjuhtvsxiusqhgtcrmeejspisnywstuomhkqgvzmzejrvngwyswezseoon
                  nullable: false
              required:
                - phone_number
      security: []
  /api/confirm_phone_number_verification:
    post:
      summary: ''
      operationId: postApiConfirm_phone_number_verification
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone_number:
                  type: string
                  description: 'The <code>phone_number</code> of an existing record in the customers table.'
                  example: commodi
                  nullable: false
                otp:
                  type: string
                  description: ''
                  example: sit
                  nullable: false
              required:
                - phone_number
                - otp
      security: []
  /api/verify_email:
    post:
      summary: ''
      operationId: postApiVerify_email
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'The <code>email</code> of an existing record in the customers table.'
                  example: tromp.claudie@example.com
                  nullable: false
                otp:
                  type: string
                  description: 'The <code>email_otp</code> of an existing record in the customers table.'
                  example: corrupti
                  nullable: false
              required:
                - email
                - otp
      security: []
  '/api/confirm-change-email/{token}':
    get:
      summary: ''
      operationId: getApiConfirmChangeEmailToken
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: token
        description: ''
        example: et
        required: true
        schema:
          type: string
  /api/resend_email_verification:
    post:
      summary: ''
      operationId: postApiResend_email_verification
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: dach.onie@example.org
                  nullable: false
              required:
                - email
      security: []
  /api/send_mail:
    post:
      summary: ''
      operationId: postApiSend_mail
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: gust13@example.org
                  nullable: false
                name:
                  type: string
                  description: ''
                  example: voluptate
                  nullable: false
                message:
                  type: string
                  description: ''
                  example: quidem
                  nullable: false
              required:
                - email
                - name
                - message
      security: []
  /api/reset_password:
    post:
      summary: ''
      operationId: postApiReset_password
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: ''
                  example: ut
                  nullable: false
                user_type:
                  type: string
                  description: ''
                  example: null
                  nullable: true
              required:
                - username
      security: []
  /api/confirm_reset_password:
    post:
      summary: ''
      operationId: postApiConfirm_reset_password
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                otp:
                  type: string
                  description: 'Must not be greater than 6 characters.'
                  example: g
                  nullable: false
                email:
                  type: string
                  description: 'Assuming OTP is a 6-character string. Must be a valid email address.'
                  example: elnora.gleason@example.net
                  nullable: false
                password:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: 'jzwb>"Uw|+'
                  nullable: false
              required:
                - otp
                - email
                - password
      security: []
  /api/guide:
    post:
      summary: ''
      operationId: postApiGuide
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: facere
                  nullable: false
                type_id:
                  type: string
                  description: ''
                  example: tempore
                  nullable: false
              required:
                - type
                - type_id
      security: []
  '/api/sms/{number}':
    get:
      summary: ''
      operationId: getApiSmsNumber
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: ''
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: number
        description: ''
        example: maiores
        required: true
        schema:
          type: string
tags:
  -
    name: Endpoints
    description: ''
